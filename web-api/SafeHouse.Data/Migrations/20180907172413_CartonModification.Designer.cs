// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SafeHouse.Data.Entities;

namespace SafeHouse.Data.Migrations
{
    [DbContext(typeof(SafeHouseContext))]
    [Migration("20180907172413_CartonModification")]
    partial class CartonModification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Svratiste.Model.Carton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreetName");

                    b.Property<string>("AddressStreetNumber");

                    b.Property<DateTime>("Birthday");

                    b.Property<bool>("EvaluationDone");

                    b.Property<string>("FatherLastName");

                    b.Property<string>("FathersFirstName");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<bool>("IndividualPlanDone");

                    b.Property<bool>("IndividualPlanRevised");

                    b.Property<bool>("InitialEvaluationDone");

                    b.Property<string>("LastName");

                    b.Property<string>("MothersFirstName");

                    b.Property<string>("MothersLastName");

                    b.Property<int>("NumberOfVisits");

                    b.HasKey("Id");

                    b.ToTable("Carton");
                });

            modelBuilder.Entity("Svratiste.Model.DailyEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Bath");

                    b.Property<bool>("Breakfast");

                    b.Property<Guid?>("CartonId");

                    b.Property<bool>("Clothing");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Dinner");

                    b.Property<bool>("LiecesRemoval");

                    b.Property<bool>("Lunch");

                    b.Property<bool>("Stay");

                    b.HasKey("Id");

                    b.HasIndex("CartonId");

                    b.ToTable("DailyEntry");
                });

            modelBuilder.Entity("Svratiste.Model.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CartonId");

                    b.HasKey("Id");

                    b.HasIndex("CartonId");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("Svratiste.Model.FirstEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressStreetName");

                    b.Property<string>("AddressStreetNumber");

                    b.Property<Guid?>("CartonId");

                    b.Property<string>("Nickname");

                    b.Property<string>("OtherChildernName");

                    b.Property<string>("OtherMembersName");

                    b.Property<string>("ParentsName");

                    b.HasKey("Id");

                    b.HasIndex("CartonId");

                    b.ToTable("FirstEvaluation");
                });

            modelBuilder.Entity("Svratiste.Model.SafeHouseUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommonName");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("SafeHouseUser");
                });

            modelBuilder.Entity("Svratiste.Model.DailyEntry", b =>
                {
                    b.HasOne("Svratiste.Model.Carton", "Carton")
                        .WithMany()
                        .HasForeignKey("CartonId");
                });

            modelBuilder.Entity("Svratiste.Model.Evaluation", b =>
                {
                    b.HasOne("Svratiste.Model.Carton", "Carton")
                        .WithMany()
                        .HasForeignKey("CartonId");
                });

            modelBuilder.Entity("Svratiste.Model.FirstEvaluation", b =>
                {
                    b.HasOne("Svratiste.Model.Carton", "Carton")
                        .WithMany()
                        .HasForeignKey("CartonId");
                });
#pragma warning restore 612, 618
        }
    }
}
